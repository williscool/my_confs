set nocompatible                " choose no compatibility with legacy vi
""Updated based on
""http://vimcasts.org/episodes/synchronizing-plugins-with-git-submodules-and-pathogen/

runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags() " have pathogen update all help files  on load

syntax enable
filetype plugin indent on
colorscheme desert

" automatically read updates to files from the file system
" http://stackoverflow.com/questions/2157914/can-vim-monitor-realtime-changes-to-a-file
" you can also manually with :e!
set autoread

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode
set smartindent
set encoding=utf-8
set showcmd                     " display incomplete commands

"" Searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

"ruby syntax
au BufNewFile,BufRead *.html.erb set syntax=eruby

"help vim understand css files that get processed with other things as well
autocmd BufNewFile,BufRead *.css*          set ft=css

"sass syntax
au BufRead,BufNewFile *.scss* set filetype=scss

"""""" autocompletions and options {{{
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType scss set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

set wildmenu


"" make the autocompleters give you the longest list to chose from all the time

set completeopt+=longest
set wildmode=list:longest
""""""""""""" }}}

"auto add semicolon's in css
autocmd FileType css inoremap <buffer> : :;<Esc>i

"This unsets the "last search pattern" register by hitting return
nnoremap <CR> :noh<CR><CR>

let g:ragtag_global_maps = 1 
let g:ctrlp_extensions = ['tag']
let g:ack_qhandler='CtrlPQuickfix'

let g:ackprg = 'ag --nogroup --nocolor --column'



" Get running OS
function! GetRunningOS()
  if has("win")
    return "win"
  endif
  if has("unix")
    if system('uname')=~'Darwin'
      return "mac"
    else
      return "linux"
    endif
  endif
endfunction

let os=GetRunningOS()

if os=="linux"
  let g:netrw_home=$HOME . "/.vimfiles" "get rid of pesky .netrwhist file in our vim directory
  "make linux vim work with ctrl+v and ctrl+c
  vmap <C-c> "+yi
  vmap <C-x> "+c
  vmap <C-v> c<ESC>"+p
  imap <C-v> <C-r><C-o>+
  
  "get rid of graphical icons for header menu and use much better text one
  se guioptions=agim
endif


" mouse stuff
set mouse=a
set ttymouse=xterm2

" http://vim.wikia.com/wiki/Alternative_tab_navigation
nnoremap <C-S-tab> :tabprevious<CR>
nnoremap <C-tab>   :tabnext<CR>
